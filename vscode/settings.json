{
    "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.darwin": "~/.config/nvim/init.lua",
    "editor.codeLensFontFamily": "Hack Nerd Font Mono",
    "editor.fontFamily": "JetBrainsMono Nerd Font",
    "editor.fontLigatures": true,
    "redhat.telemetry.enabled": false,
    "workbench.list.automaticKeyboardNavigation": false,
    /*"vsnotes.defaultNotePath": "/users/cb/code/home/notebook",
    "vsnotes.defaultNoteName":"{title}.{ext}",
    "vsnotes.noteTitleConvertSpaces": "_",
    "vsnotes.tokens": [
        {
            "type": "datetime",
            "token": "{dt}",
            "format": "YYYY-MM-DD_HH-mm",
            "description": "Insert formatted datetime."
        },
        {
            "type": "title",
            "token": "{title}",
            "description": "Insert note title from input box.",
            "format": "Untitled"
        },
        {
            "type": "extension",
            "token": "{ext}",
            "description": "Insert file vsnotes.",
            "format": "md"
        }
    ],
    "vsnotes.defaultSnippet": {
        "langId": "markdown",
        "name": "Header"
    },*/
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[azure-pipelines]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "vscode-edge-devtools.mirrorEdits": true,
    "vscode-edge-devtools.fallbackRevision": "@c8275fcfc2e02d5ca43c76374fa8200557b8712c",
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "workbench.iconTheme": "vscode-icons",
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "workbench.startupEditor": "none",
    "vscode-neovim.highlightGroups.ignoreHighlights": [
        "EndOfBuffer",
        "ErrorMsg",
        "MoreMsg",
        "ModeMsg",
        "Question",
        "VisualNC",
        "WarningMsg",
        "^Diff",
        "Sign",
        "SignColumn",
        "^Spell",
        "^Pmenu",
        "^Tab",
        "ColorColumn",
        "QuickFixLine",
        "MsgSeparator",
        "MsgArea",
        "^RedrawDebug",
        "^.*MatchParen",
        "^Nvim",
        "Operator",
        "Delimiter",
        "Identifier",
        "SpecialChar",
        "Number",
        "Type",
        "String",
        "Error",
        "Comment",
        "Constant",
        "Special",
        "Statement",
        "PreProc",
        "Underlined",
        "Ignore",
        "Todo",
        "Character",
        "Boolean",
        "Float",
        "Function",
        "Conditional",
        "Repeat",
        "Label",
        "Keyword",
        "Exception",
        "Include",
        "Define",
        "Macro",
        "PreCondit",
        "StorageClass",
        "Structure",
        "Typedef",
        "Tag",
        "SpecialComment",
        "Debug",
        "Folded",
        "FoldColumn"
    ],
    "vscode-neovim.highlightGroups.highlights": {
        "Directory": "vim",
        "IncSearch": {
            "backgroundColor": "theme.editor.findMatchBackground",
            "borderColor": "theme.editor.findMatchBorder"
        },
        "Search": {
            "backgroundColor": "theme.editor.findMatchHighlightBackground",
            "borderColor": "theme.editor.findMatchHighlightBorder"
        },
        "Visual": {
            "backgroundColor": "theme.editor.selectionBackground"
        },
        "Conceal": "vim",
        "Substitute": "vim"
    },
    "vscode-neovim.highlightGroups.unknownHighlight": "vim",
    "vsicons.dontShowNewVersionMessage": true,
    "[python]": {
        "editor.formatOnType": true
    },
    "window.zoomLevel": -1,
    "codeium.enableConfig": {
        "*": true
    },
    "dataworkspace.excludedProjects": [],
    "workbench.colorTheme": "Tokyo Night",
    "code-runner.executorMapByFileExtension": {
        ".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",
        ".vbs": "cscript //Nologo",
        ".scala": "scala",
        ".jl": "julia",
        ".cr": "crystal",
        ".ml": "ocaml",
        ".zig": "zig run",
        ".exs": "elixir",
        ".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        ".rkt": "racket",
        ".scm": "csi -script",
        ".ahk": "autohotkey",
        ".au3": "autoit3",
        ".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
        ".kts": "kotlinc -script",
        ".dart": "dart",
        ".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        ".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        ".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        ".hs": "runhaskell",
        ".nim": "nim compile --verbosity:0 --hints:off --run",
        ".csproj": "dotnet run --project",
        ".fsproj": "dotnet run --project",
        ".lisp": "sbcl --script",
        ".kit": "kitc --run",
        ".v": "v run",
        ".vsh": "v run",
        ".sass": "sass --style expanded",
        ".cu": "cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        ".ring": "ring",
        ".sml": "cd $dir && sml $fileName"
    },
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "zig": "zig run",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        // "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "rust": "cargo run # $fileName",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runghc",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "sml": "cd $dir && sml $fileName"
    },
    "rust-analyzer.completion.autoimport.enable": false,
    "rust-analyzer.check.command": "clippy",
    //     "editor.defaultFormatter": "esbenp.prettier-vscode",
    //     "[csharp]": {
    //         "editor.defaultFormatter": "ms-dotnettools.csharp"
    //   }
    "editor.minimap.autohide": true,
    "editor.minimap.enabled": true,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.scale": 1,
    "editor.minimap.showSlider": "mouseover",
    "editor.minimap.side": "right",
    "breadcrumbs.enabled": false,
    "editor.cursorBlinking": "solid",
    "editor.cursorSmoothCaretAnimation": "off",
    "editor.cursorSurroundingLines": 10,
    "editor.cursorSurroundingLinesStyle": "default",
    "editor.hover.delay": 300,
    "workbench.hover.delay": 1,
    "editor.guides.bracketPairs": true,
    "editor.guides.bracketPairsHorizontal": "active",
    "editor.guides.highlightActiveBracketPair": true,
    "editor.guides.highlightActiveIndentation": true,
    "editor.guides.indentation": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.occurrencesHighlight": true,
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#0f77ff33",
        "editor.lineHighlightBorder": "#9fced11f",
        "editorCursor.background": "#000000",
        "editorCursor.foreground": "#ff930f",
        "editorLineNumber.activeForeground": "#A020F0",
        "editorLineNumber.foreground": "#5DE23C",
        "titleBar.activeBackground": "#000000",
        "titleBar.activeForeground": "#ffffff",
        "titleBar.inactiveBackground": "#000000",
        "titleBar.inactiveForeground": "#9e9a9a",
        "tab.activeBorder": "#F4DB01",
        "terminal.tab.activeBorder": "#F4DB01",
        "statusBar.background": "#000000",
        "statusBar.debuggingBackground": "#007acc",
        "statusBar.foreground": "#F4DB01",
        "statusBar.debuggingForeground": "#F4DB01",
        "statusBar.noFolderBackground": "#007acc"
    },
    "workbench.list.smoothScrolling": true,
    "editor.fastScrollSensitivity": 5,
    "editor.smoothScrolling": false,
    "editor.stickyScroll.enabled": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": false,
    "security.workspace.trust.banner": "never",
    "security.workspace.trust.emptyWindow": true,
    "security.workspace.trust.enabled": false,
    "security.workspace.trust.startupPrompt": "never",
    "dance.menus": {
        "object": {
            "title": "Select object...",
            "items": {
                "w": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "[\\p{L}_\\d]+(?<after>[^\\S\\n]+)"
                        }
                    ],
                    "text": "word"
                },
                "W": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "[\\S]+(?<after>[^\\S\\n]+)"
                        }
                    ],
                    "text": "WORD"
                },
                "s": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?#predefined=sentence)"
                        }
                    ],
                    "text": "sentence"
                },
                "p": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?#predefined=paragraph)"
                        }
                    ],
                    "text": "paragraph"
                },
                " ": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?<before>[\\s]+)[^\\S\\n]+(?<after>[\\s]+)"
                        }
                    ],
                    "text": "whitespaces"
                },
                "i": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?#predefined=indent)"
                        }
                    ],
                    "text": "indent"
                },
                "()": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "\\((?#inner)\\)"
                        }
                    ],
                    "text": "parenthesis block"
                },
                "{}": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "\\{(?#inner)\\}"
                        }
                    ],
                    "text": "braces block"
                },
                "[]": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "\\[(?#inner)\\]"
                        }
                    ],
                    "text": "brackets block"
                },
                "<>": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "<(?#inner)>"
                        }
                    ],
                    "text": "angle block"
                },
                "\"": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?#noescape)\"(?#inner)(?#noescape)\""
                        }
                    ],
                    "text": "double quote string"
                },
                "'": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?#noescape)'(?#inner)(?#noescape)'"
                        }
                    ],
                    "text": "single quote string"
                },
                "`": {
                    "command": "dance.seek.object",
                    "args": [
                        {
                            "input": "(?#noescape)`(?#inner)(?#noescape)`"
                        }
                    ],
                    "text": "grave quote string"
                },
                "c": {
                    "command": "dance.seek.object",
                    "text": "custom object desc"
                }
            }
        },
        "match": {
            "title": "Match...",
            "items": {
                "m": {
                    "text": "Goto matching bracket",
                    "command": "dance.seek.enclosing"
                },
                "s": {
                    "text": "Surround add",
                    "command": "dance.match.surround"
                },
                "r": {
                    "text": "Surround replace",
                    "command": "dance.match.surroundreplace"
                },
                "d": {
                    "text": "Surround delete",
                    "command": "dance.match.surrounddelete"
                },
                "a": {
                    "text": "Select around object",
                    "command": "dance.seek.askObject"
                },
                "i": {
                    "text": "Select inside object",
                    "command": "dance.seek.askObject.inner"
                }
            }
        },
        "space": {
            "title": "Space",
            "items": {
                "f": {
                    "text": "Open file picker",
                    "command": "workbench.action.quickOpen"
                },
                "b": {
                    "text": "Open buffer picker",
                    "command": "workbench.action.showAllEditors"
                },
                "s": {
                    "text": "Open symbol picker",
                    "command": "workbench.action.gotoSymbol"
                },
                "a": {
                    "text": "Perform code action",
                    "command": "editor.action.quickFix"
                },
                "d": {
                    "text": "Start debug",
                    "command": "workbench.action.debug.start"
                },
                "w": {
                    "text": "Window",
                    "command": "dance.window.windowMenu"
                },
                "y": {
                    "text": "Join and yank selections to clipboard",
                    "command": "dance.selections.saveText",
                    "args": [
                        {
                            "register": ""
                        }
                    ]
                },
                "p": {
                    "text": "Paste clipboard after selections",
                    "command": "dance.edit.insert",
                    "args": [
                        {
                            "handleNewLine": true,
                            "where": "end"
                        }
                    ]
                },
                "P​": {
                    "text": "Paste clipboard before selections",
                    "command": "dance.edit.insert",
                    "args": [
                        {
                            "handleNewLine": true,
                            "where": "start"
                        }
                    ]
                },
                "/": {
                    "text": "Global Search in workspace folder",
                    "command": "workbench.action.findInFiles"
                },
                "k": {
                    "text": "Show docs for item under cursor (hover)",
                    "command": "editor.action.showHover"
                },
                "r": {
                    "text": "Rename symbol",
                    "command": "editor.action.rename"
                },
                "?": {
                    "text": "Open command palette",
                    "command": "workbench.action.showCommands"
                }
            }
        },
        "goto": {
            "title": "Go...",
            "items": {
                "g": {
                    "text": "to first line",
                    "command": "dance.select.lineStart",
                    "args": [
                        {
                            "count": 1
                        }
                    ]
                },
                "e": {
                    "text": "to last char of last line",
                    "command": "dance.select.lineEnd",
                    "args": [
                        {
                            "count": 2147483647
                        }
                    ]
                },
                "f": {
                    "text": "to file whose name is selected",
                    "command": "dance.selections.open"
                },
                "h": {
                    "text": "to line start",
                    "command": "dance.select.lineStart"
                },
                "l": {
                    "text": "to line end",
                    "command": "dance.select.lineEnd"
                },
                "s": {
                    "text": "to non-blank line start",
                    "command": "dance.select.lineStart",
                    "args": [
                        {
                            "skipBlank": true
                        }
                    ]
                },
                "t": {
                    "text": "to first displayed line",
                    "command": "dance.select.firstVisibleLine"
                },
                "c": {
                    "text": "to middle displayed line",
                    "command": "dance.select.middleVisibleLine"
                },
                "b": {
                    "text": "to last displayed line",
                    "command": "dance.select.lastVisibleLine"
                },
                "d": {
                    "text": "to definition",
                    "command": "editor.action.revealDefinition"
                },
                "y": {
                    "text": "to type definition",
                    "command": "editor.action.goToTypeDefinition"
                },
                "r": {
                    "text": "to references",
                    "command": "editor.action.goToReferences"
                },
                "i": {
                    "text": "to implementation",
                    "command": "editor.action.goToImplementation"
                },
                "a": {
                    "text": "to last accessed buffer",
                    "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
                },
                "n": {
                    "text": "to next buffer",
                    "command": "workbench.action.nextEditor"
                },
                "p": {
                    "text": "to previous buffer",
                    "command": "workbench.action.previousEditor"
                },
                ".": {
                    "text": "to last buffer modification position",
                    "command": "dance.selections.restore",
                    "args": [
                        {
                            "register": " insert"
                        }
                    ]
                }
            }
        },
        "window": {
            "title": "Window",
            "items": {
                "w": {
                    "text": "Goto next window",
                    "command": "workbench.action.nextEditor"
                },
                "s": {
                    "text": "Horizontal bottom split",
                    "command": "workbench.action.splitEditorDown"
                },
                "v": {
                    "text": "Vertical right split",
                    "command": "workbench.action.splitEditor"
                },
                "t": {
                    "text": "Transpose splits",
                    "command": "workbench.action.toggleEditorGroupLayout"
                },
                "q": {
                    "text": "Close window",
                    "command": "workbench.action.closeActiveEditor"
                },
                "o": {
                    "text": "Close all other windows (Current window only)",
                    "command": "workbench.action.closeOtherEditors"
                },
                "h": {
                    "text": "Jump to the split on the left",
                    "command": "workbench.action.focusLeftGroup"
                },
                "j": {
                    "text": "Jump to the split below",
                    "command": "workbench.action.focusBelowGroup"
                },
                "k": {
                    "text": "Jump to the split above",
                    "command": "workbench.action.focusAboveGroup"
                },
                "l": {
                    "text": "Jump to the split to the right",
                    "command": "workbench.action.focusRightGroup"
                },
                "H": {
                    "text": "Swap with the split to the left",
                    "command": "workbench.action.moveActiveEditorGroupLeft"
                },
                "J": {
                    "text": "Swap with the split below",
                    "command": "workbench.action.moveActiveEditorGroupDown"
                },
                "K": {
                    "text": "Swap with the split above",
                    "command": "workbench.action.moveActiveEditorGroupUp"
                },
                "L": {
                    "text": "Swap with the split to the right",
                    "command": "workbench.action.moveActiveEditorGroupRight"
                }
            }
        },
        "view": {
            "title": "View",
            "items": {
                "zc": {
                    "text": "center cursor vertically",
                    "command": "dance.view.line",
                    "args": [
                        {
                            "at": "center"
                        }
                    ]
                },
                "t": {
                    "text": "cursor on top",
                    "command": "dance.view.line",
                    "args": [
                        {
                            "at": "top"
                        }
                    ]
                },
                "b": {
                    "text": "cursor on bottom",
                    "command": "dance.view.line",
                    "args": [
                        {
                            "at": "bottom"
                        }
                    ]
                },
                "j": {
                    "text": "scroll down",
                    "command": "editorScroll",
                    "args": [
                        {
                            "to": "down",
                            "by": "line",
                            "revealCursor": true
                        }
                    ]
                },
                "k": {
                    "text": "scroll up",
                    "command": "editorScroll",
                    "args": [
                        {
                            "to": "up",
                            "by": "line",
                            "revealCursor": true
                        }
                    ]
                }
            }
        }
    },
    "editor.fontSize": 14,
    "terminal.external.osxExec": "wezterm",
    "terminal.integrated.profiles.osx": {
        "bash": {
            "path": "bash",
            "args": [
                "-l"
            ],
            "icon": "terminal-bash"
        },
        "zsh": {
            "path": "zsh",
            "args": [
                "-l"
            ]
        },
        "fish": {
            "path": "fish",
            "args": [
                "-l"
            ]
        },
        "tmux": {
            "path": "tmux",
            "icon": "terminal-tmux"
        },
        "pwsh": {
            "path": "pwsh",
            "icon": "terminal-powershell"
        },
    },
    "dance.modes": {
        "": {
            "hiddenSelectionsIndicatorsDecoration": {
                "after": {
                    "color": "$list.warningForeground"
                },
                "backgroundColor": "$inputValidation.warningBackground",
                "borderColor": "$inputValidation.warningBorder",
                "borderStyle": "solid",
                "borderWidth": "1px",
                "isWholeLine": true
            }
        },
        "input": {
            "cursorStyle": "underline-thin"
        },
        "insert": {
            "onLeaveMode": [
                [
                    ".selections.save",
                    {
                        "register": " insert"
                    }
                ]
            ]
        },
        "visual": {
            "lineNumbers": "relative",
            "cursorStyle": "underline",
            "selectionBehavior": "character",
            "onEnterMode": [
                [
                    ".selections.restore",
                    {
                        "register": " ^",
                        "try": true
                    }
                ]
            ],
            "onLeaveMode": [
                [
                    ".selections.save",
                    {
                        "register": " ^",
                        "style": {
                            "borderColor": "$editor.selectionBackground",
                            "borderStyle": "solid",
                            "borderWidth": "2px",
                            "borderRadius": "1px"
                        },
                        "until": [
                            [
                                "mode-did-change",
                                {
                                    "include": "normal"
                                }
                            ],
                            [
                                "mode-did-change",
                                {
                                    "include": "visual"
                                }
                            ],
                            [
                                "selections-did-change"
                            ]
                        ]
                    }
                ]
            ]
        },
        "normal": {
            "lineNumbers": "relative",
            "cursorStyle": "block",
            "selectionBehavior": "character",
            "onEnterMode": [
                [
                    ".selections.restore",
                    {
                        "register": " ^",
                        "try": true
                    }
                ]
            ],
            "onLeaveMode": [
                [
                    ".selections.save",
                    {
                        "register": " ^",
                        "style": {
                            "borderColor": "$editor.selectionBackground",
                            "borderStyle": "solid",
                            "borderWidth": "2px",
                            "borderRadius": "1px"
                        },
                        "until": [
                            [
                                "mode-did-change",
                                {
                                    "include": "normal"
                                }
                            ],
                            [
                                "mode-did-change",
                                {
                                    "include": "visual"
                                }
                            ],
                            [
                                "selections-did-change"
                            ]
                        ]
                    }
                ]
            ]
        }
    },
}