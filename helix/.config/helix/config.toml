theme = "hakefjord"


[editor]
true-color = true
cursorline = true
gutters = ["diagnostics", "spacer", "line-numbers", "spacer", "diff"]
bufferline = "multiple"
mouse = true
line-number = "relative"
auto-format = true
rulers = [80, 120]

[editor.soft-wrap]
enable = true
max-wrap = 25         # increase value to reduce forced mid-word wrapping
max-indent-retain = 0
wrap-indicator = ""   # set wrap-indicator to "" to hide it

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.lsp]
display-messages = true
display-inlay-hints = true

[editor.statusline]
left = ["mode", "spinner", "version-control"]
center = ["file-name"]
right = [
  "diagnostics",
  "selections",
  "position",
  "file-encoding",
  "file-line-ending",
  "file-type",
]
separator = "│"
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.indent-guides]
character = "╎"
render = true

[editor.file-picker]
hidden = false
git-ignore = false
git-global = false

[editor.whitespace]
render = "all"

[keys.normal]
# o = ["open_below", "normal_mode"]
# O = ["open_above", "normal_mode"]
tab = ":buffer-next"
S-tab = ":buffer-previous"
esc = ["collapse_selection", "keep_primary_selection"]
V = ["select_mode", "extend_to_line_bounds"]
A-k = "copy_selection_on_prev_line"
A-j = "copy_selection_on_next_line"
C-p = ["move_line_up", "scroll_up"]
C-n = ["move_line_down", "scroll_down"]
C-f = [
  ":new",
  ":insert-output lf-pick",
  ":theme default",
  "select_all",
  "split_selection_on_newline",
  "goto_file",
  "goto_last_modified_file",
  ":buffer-close!",
  ":theme tokyonight",
]
up = "no_op"
down = "no_op"
left = "no_op"
right = "no_op"

[keys.normal.backspace]
l = { a = ":set line-number absolute", r = ":set line-number relative" }
# b = ":run-shell-command zellij run -f -- just build"
# r = ":run-shell-command zellij run -f -- just run"
# c = ":run-shell-command zellij run -f -- just clippy"
# t = ":run-shell-command zellij run -f -- just test"
# g = ":run-shell-command zellij run -f -- lazygit"
# f = ":run-shell-command zellij run -fc -- broot"

[keys.normal.space]
i = ":toggle lsp.display-inlay-hints"
F = "file_picker_in_current_directory"
q = ":q"
x = ":bc"
"," = ":w"
"!" = ":q!"
o = ":reload-all"

# Tmux 
# [keys.normal.'space'.'space']
# # Interactive search in current working directory
# l = ":pipe-to helix-tmux search --current"
# # Interactive search in current working directory (include path name in the search)
# L = ":pipe-to helix-tmux search --current-inc-path"
# # Interactive search in current git directory
# w = ":pipe-to helix-tmux search --workspace"
# # Interactive search in current git directory (include path name in the search)
# W = ":pipe-to helix-tmux search --workspace-inc-path"
# # Interactive search in current buffer
# B = ":pipe-to helix-tmux search --buffer"
# # Git status
# b = ":pipe-to helix-tmux git --blame"
# # Git browse github repo using default browser
# H = ":pipe-to helix-tmux git --browse"
# # Files tree
# t = ":pipe-to helix-tmux tree"
# # lazygit
# g = ":pipe-to helix-tmux git --lazygit"

# # Zelllij
[keys.normal.'space'.'space']
## Interactive search in current working directory
l = ":pipe-to helix-zellij search --current"
## Interactive search in current working directory (include path name in the search)
L = ":pipe-to helix-zellij search --current-inc-path"
## Interactive search in current git directory
w = ":pipe-to helix-zellij search --workspace"
## Interactive search in current git directory (include path name in the search)
W = ":pipe-to helix-zellij search --workspace-inc-path"
## Interactive search in current buffer
B = ":pipe-to helix-zellij search --buffer"
## Git status
s = ":pipe-to helix-zellij git --status"
## Git blame
b = ":pipe-to helix-zellij git --blame"
## Git browse github repo using default browser
H = ":pipe-to helix-zellij git --browse"
## lazygit
g = ":pipe-to helix-zellij git --lazygit"
## Diff current buffer with content on disk
d = ":pipe-to helix-zellij diff"

[keys.select]
k = ["extend_line_up", "extend_to_line_bounds"]
j = ["extend_line_down", "extend_to_line_bounds"]
X = ["extend_line_up", "extend_to_line_bounds"]
C-j = [
  'ensure_selections_forward',
  'extend_to_line_bounds',
  'extend_char_right',
  'extend_char_left',
  'delete_selection','add_newline_below',
  'move_line_down',
  'replace_with_yanked',
]
C-k = [
  'ensure_selections_forward',
  'extend_to_line_bounds',
  'extend_char_right',
  'extend_char_left',
  'delete_selection',
  'move_line_up',
  'add_newline_above',
  'move_line_up',
  'replace_with_yanked',
]

[keys.insert]
j = { k = "normal_mode" }
up = "no_op"
down = "no_op"
left = "no_op"
right = "no_op"

